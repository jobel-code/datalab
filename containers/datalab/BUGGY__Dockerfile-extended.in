# -*- mode: ruby -*-
# vi: set ft=ruby :

# Use this file to create a new docker image derived from the standard datalab image

FROM gcr.io/cloud-datalab/datalab:latest
MAINTAINER "Aquabiota Solutions AB <mapcloud@aquabiota.se>"


#
RUN conda config --system --append channels r && conda config --system --append channels bioconda
RUN conda update -n base -c defaults conda

# AquaBiota requirements
ENV GDAL_DATA $DATALAB_CONDA_DIR/share/gdal/
ENV GEOS_DIR $DATALAB_CONDA_DIR

RUN conda install --name py3env -y bcrypt passlib
RUN conda install --name py3env -y -c conda-forge libgdal geopy folium rasterio \
    ipyleaflet bqplot cmocean cartopy iris shapely pyproj \
    fiona geopandas
RUN conda install --name py3env -y -c conda-forge xmltodict
RUN conda install --name py3env -y -c conda-forge gdal

# R related
RUN conda install --name py3env -y -c r r-essentials

RUN conda install --name py3env -y -c conda-forge r-devtools r-rcurl
RUN conda install --name py3env -y -c conda-forge r-irkernel r-irdisplay r-repr r-rzmq
RUN conda install --name py3env -y -c conda-forge r-rgdal
RUN conda install --name py3env -y -c conda-forge rpy2
RUN conda install --name py3env -y -c conda-forge r-ggplot2 r-nloptr r-broom r-tidyr
RUN conda install --name py3env -y -c conda-forge r-dplyr r-spatial r-jsonlite r-stringr \
    r-reshape2 r-data.table r-hmisc r-reshape r-ggthemes
RUN conda install --name py3env -y -c conda-forge r-car r-psych r-mgcv r-randomforest r-rocr \
    r-raster  r-leaflet r-sqldf r-geosphere r-xml r-xml2
RUN conda install --name py3env -y -c conda-forge r-abind r-proc r-nnet r-gbm r-rpart r-mass r-gam r-gamlss

# See: https://stackoverflow.com/questions/47721352/how-can-one-use-r-within-google-cloud-datalab-notebook

RUN pip install --upgrade pip
RUN pip install s2sphere



## Use Debian unstable via pinning -- new style via APT::Default-Release
RUN echo "deb http://http.debian.net/debian sid main" > /etc/apt/sources.list.d/debian-unstable.list \
        && echo 'APT::Default-Release "testing";' > /etc/apt/apt.conf.d/default


RUN source activate $PYTHON_3_ENV && \
## Now install R and littler, and create a link for littler in /usr/local/bin
apt-get update \
	&& apt-get install -t unstable -y --no-install-recommends \
		littler \
                r-cran-littler \
		r-base=${R_BASE_VERSION}-* \
		r-base-dev=${R_BASE_VERSION}-* \
		r-recommended=${R_BASE_VERSION}-* \
	&& ln -s /usr/lib/R/site-library/littler/examples/install.r /usr/local/bin/install.r \
	&& ln -s /usr/lib/R/site-library/littler/examples/install2.r /usr/local/bin/install2.r \
	&& ln -s /usr/lib/R/site-library/littler/examples/installGithub.r /usr/local/bin/installGithub.r \
	&& ln -s /usr/lib/R/site-library/littler/examples/testInstalled.r /usr/local/bin/testInstalled.r \
	&& install.r docopt curl httr \
  && install2.r -d TRUE rgdal plyr tidyverse shiny rmarkdown forecast rsqlite \
  reshape2 caret rcurl crayon randomforest \
  htmltools sparklyr htmlwidgets hexbin rzmq ggplot2 nloptr broom dplyr spatial \
  jsonlite stringr data.table hmisc car psych mgcv rocr raster leaflet proc nnet \
  rpart mass repr ggthemes sqldf geosphere xml xml2 abind gbm gam gamlss


/////////////


## Use Debian unstable via pinning -- new style via APT::Default-Release
RUN echo "deb http://http.debian.net/debian sid main" > /etc/apt/sources.list.d/debian-unstable.list \
        && echo 'APT::Default-Release "testing";' > /etc/apt/apt.conf.d/default

RUN source activate $PYTHON_3_ENV && \
## Now install R and littler, and create a link for littler in /usr/local/bin
apt-get update \
	&& apt-get install -t unstable -y --no-install-recommends \
		littler \
                r-cran-littler \
		r-base=${R_BASE_VERSION}-* \
		r-base-dev=${R_BASE_VERSION}-* \
		r-recommended=${R_BASE_VERSION}-* \
	&& ln -s /usr/lib/R/site-library/littler/examples/install.r /usr/local/bin/install.r \
	&& ln -s /usr/lib/R/site-library/littler/examples/install2.r /usr/local/bin/install2.r \
	&& ln -s /usr/lib/R/site-library/littler/examples/installGithub.r /usr/local/bin/installGithub.r \
	&& ln -s /usr/lib/R/site-library/littler/examples/testInstalled.r /usr/local/bin/testInstalled.r \
	&& install.r docopt curl httr \
  && install2.r -d TRUE rgdal plyr tidyverse shiny rmarkdown forecast rsqlite \
  reshape2 caret rcurl crayon randomforest \
  htmltools sparklyr htmlwidgets hexbin rzmq ggplot2 nloptr broom dplyr spatial \
  jsonlite stringr data.table hmisc car psych mgcv rocr raster leaflet proc nnet \
  rpart mass repr ggthemes sqldf geosphere xml xml2 abind gbm gam gamlss \
  && install2.r -d TRUE  repr IRdisplay evaluate crayon pbdZMQ uuid digest githubinstall devtools \
  && installGithub.r -d TRUE -u TRUE IRkernel/IRkernel \
	&& rm -rf /tmp/downloaded_packages/ /tmp/*.rds \
	&& rm -rf /var/lib/apt/lists/*

RUN install2.r biomod2

#RUN conda install --name $PYTHON_3_ENV --quiet --yes \
#r-irkernel==0.8.2

#RUN R -e 'install.packages(c("curl", "httr", "repr", "IRdisplay", "evaluate", "crayon", "pbdZMQ", "uuid", "digest", #"githubinstall"), dependencies=TRUE)'
#RUN R -e 'library("githubinstall")' && \
#   'githubinstall("devtools")' && \
#  'githubinstall("IRkernel")' && \
#   'IRkernel::installspec(user=FALSE)'
#RUN R -e 'devtools::install_github("IRkernel/IRkernel")' && \
	# or 'devtools::install_local("IRkernel-master.tar.gz")' && \
# RUN	R -e 'IRkernel::installspec()'


//


conda install -c conda-forge --quiet --yes \
# NOTE: r-base 3.5.1 MUST BE DOWNGRADED in order to work
r-base==3.4.1 \
r-irkernel \
r-irdisplay \
r-pbdzmq \
r-uuid \
r-digest \
r-rgdal \
r-plyr \
r-devtools \
r-tidyverse \
r-shiny \
r-rmarkdown \
r-forecast \
r-rsqlite \
r-reshape2 \
r-caret \
r-rcurl \
r-crayon \
r-randomforest \
r-htmltools \
r-sparklyr \
r-htmlwidgets \
r-hexbin \
r-rzmq  \
r-ggplot2 \
r-nloptr  \
r-broom  \
r-dplyr  \
r-spatial  \
r-jsonlite  \
r-stringr  \
r-data.table \
r-hmisc \
r-car \
r-psych  \
r-mgcv  \
r-rocr \
r-raster  \
r-leaflet  \
r-proc  \
r-nnet  \
r-rpart  \
r-mass \
r-repr  \
r-ggthemes  \
r-sqldf  \
r-geosphere  \
r-xml  \
r-xml2  \
r-abind  \
r-gbm  \
r-gam  \
r-gamlss




RJSONIO
RUN install2.r -d TRUE  repr evaluate crayon pbdZMQ uuid digest devtools
RUN install2.r -d FALSE reshape PresenceAbsence dismo \
   # maxent biomod2 ## maxent is not available then biomod2 cannot be installed
   # && installGithub.r -d TRUE -u TRUE IRkernel/IRkernel \
   && rm -rf /tmp/downloaded_packages/ /tmp/*.rds \
 	 && rm -rf /var/lib/apt/lists/*


#RUN conda install --name $PYTHON_3_ENV  -c conda-forge --quiet --yes \
# NOTE: r-base 3.5.1 MUST BE DOWNGRADED in order to work
# r-base==3.4.1 \
#r-irkernel \
#r-irdisplay \
#r-pbdzmq \
#r-uuid \
#r-digest \
#r-rgdal \
#rpy2 \
#r-plyr \
#r-devtools \
#r-tidyverse \
#r-shiny \
#r-rmarkdown \
#r-forecast \
#r-rsqlite \
#r-reshape2 \
#r-caret \
#r-rcurl \
#r-crayon \
#r-randomforest \
#r-htmltools \
#r-sparklyr \
#r-htmlwidgets \
#r-hexbin \
#r-rzmq  \
#r-ggplot2 \
#r-nloptr  \
#r-broom  \
#r-dplyr  \
#r-spatial  \
#r-jsonlite  \
#r-stringr  \
#r-data.table \
#r-hmisc \
#r-car \
#r-psych  \
#r-mgcv  \
#r-rocr \
#r-raster  \
#r-leaflet  \
#r-proc  \
#r-nnet  \
#r-rpart  \
#r-mass \
#r-repr  \
#r-irdisplay  \
#r-ggthemes  \
#r-sqldf  \
#r-geosphere  \
#r-xml  \
#r-xml2  \
#r-abind  \
#r-gbm  \
#r-gam  \
#r-gamlss
